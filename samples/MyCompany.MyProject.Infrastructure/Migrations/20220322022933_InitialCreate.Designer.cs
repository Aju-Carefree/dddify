// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCompany.MyProject.Infrastructure;

#nullable disable

namespace MyCompany.MyProject.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220322022933_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("MyCompany.MyProject.Domain.Entities.Todo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("MyCompany.MyProject.Domain.Entities.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Reminder")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TodoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TodoId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("MyCompany.MyProject.Domain.Entities.Todo", b =>
                {
                    b.OwnsOne("MyCompany.MyProject.Domain.ValueObjects.Colour", "Colour", b1 =>
                        {
                            b1.Property<Guid>("TodoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("TEXT");

                            b1.HasKey("TodoId");

                            b1.ToTable("Todos");

                            b1.WithOwner()
                                .HasForeignKey("TodoId");
                        });

                    b.Navigation("Colour")
                        .IsRequired();
                });

            modelBuilder.Entity("MyCompany.MyProject.Domain.Entities.TodoItem", b =>
                {
                    b.HasOne("MyCompany.MyProject.Domain.Entities.Todo", null)
                        .WithMany("Items")
                        .HasForeignKey("TodoId");
                });

            modelBuilder.Entity("MyCompany.MyProject.Domain.Entities.Todo", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
